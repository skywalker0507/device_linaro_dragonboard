{
  "comments": [
    {
      "key": {
        "uuid": "18509425_7393ff81",
        "filename": "sepolicy/file_contexts",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1010110
      },
      "writtenOn": "2019-09-18T23:36:11Z",
      "side": 1,
      "message": "I\u0027m not sure exactly what is wrong here, but I\u0027m seeing application crashes on launch (clock is the easiest example) with crashes in render ui. Digging further it seems its due to the following sepolicy denial:\n\ntype\u003d1400 audit(1568849449.975:20): avc: denied { read } for comm\u003d\"RenderThread\" name\u003d\"dri\" dev\u003d\"tmpfs\" ino\u003d7674 scontext\u003du:r:untrusted_app_25:s0:c512,c768 tcontext\u003du:object_r:gpu_device:s0 tclass\u003ddir permissive\u003d0 app\u003dcom.android.deskclock\n\n\nAnd using setenforce permissive makes the crashes go away.\n\nI suspect some of the sepolicy cleanup done since the v3 of this patchset, something went missing here.",
      "revId": "6d725cb1ae2b329e16cc99941a39016bc145c79d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f85a8a06_e93db6b4",
        "filename": "sepolicy/file_contexts",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1293738
      },
      "writtenOn": "2019-09-19T00:03:39Z",
      "side": 1,
      "message": "Looks like a lot of Android services are granted \"r_dir_perms\" or \"search\" perms to \"graphics_device:dir\"\n\nTry making /dev/dri \"graphics_device\", not \"gpu_device\" first.\n\nIf that doesn\u0027t work, try something like:\n\nallow { appdomain -isolated_app } gpu_device:dir r_dir_perms;\n\nIn your board sepolicy. If the second change fixes it, please move it to system/sepolicy/public/app.te and upload a new AOSP review with nnk@ copied for further discussion. Thanks!",
      "parentUuid": "18509425_7393ff81",
      "revId": "6d725cb1ae2b329e16cc99941a39016bc145c79d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f106c8d9_b9d1ff5b",
        "filename": "sepolicy/file_contexts",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1031448
      },
      "writtenOn": "2019-09-19T13:53:26Z",
      "side": 1,
      "message": "\"/dev/dri        u:object_r:graphics_device:s0\" didn\u0027t work.\n\n\"allow { appdomain -isolated_app } gpu_device:dir r_dir_perms;\" is needed but it is not sufficient. I needed to give to access to gpu sysfs nodes too.\n\nSo following combo worked and no app is crashing now:\n\nallow { appdomain -isolated_app } gpu_device:dir r_dir_perms;\nallow { appdomain -isolated_app } sysfs_mdss:file { getattr open read };\nallow { appdomain -isolated_app } sysfs_mdss:dir search;\n\nI\u0027ll submit a patch for above gpu_device r_dir_perms rule to system/sepolicy/public/app.te.",
      "parentUuid": "f85a8a06_e93db6b4",
      "revId": "6d725cb1ae2b329e16cc99941a39016bc145c79d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52856c20_8f71174e",
        "filename": "sepolicy/file_contexts",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1293738
      },
      "writtenOn": "2019-09-19T14:59:30Z",
      "side": 1,
      "message": "I think selinux requires that paths have only one label, so I guess you need to tweak this to do both of my suggestions (label with \"graphics\" instead of \"gpu\", and adjust your new rules.)",
      "parentUuid": "f106c8d9_b9d1ff5b",
      "revId": "6d725cb1ae2b329e16cc99941a39016bc145c79d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a5fdf18_cfabbbe7",
        "filename": "sepolicy/file_contexts",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1031448
      },
      "writtenOn": "2019-09-19T15:42:12Z",
      "side": 1,
      "message": "Just a small question here before I dig into it. You mean we should label all /dev/dri* as graphics_device? Right now my labeling is consistent with labels in Cuttlefish, which label only /dev/dri/card0 as graphics_device and both /dev/dri, /dev/dri/renderD128 as gpu_device.",
      "parentUuid": "52856c20_8f71174e",
      "revId": "6d725cb1ae2b329e16cc99941a39016bc145c79d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8ea7082_a38bd7d5",
        "filename": "sepolicy/file_contexts",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1293738
      },
      "writtenOn": "2019-09-19T17:42:52Z",
      "side": 1,
      "message": "I mean that you can\u0027t have \"/dev/dri\" (the directory) be labelled \"gpu_device\" in your policy, and then have rules referring to \"graphics_device\" in core policy (I\u0027m referring to the ones that already exist.)\n\nI think this split between gpu_device and graphics_device was made recently, to further lock down applications\u0027 ability to use /dev/dri/card0 - this node is not required by the GPU driver, it should only be used by gralloc and hwcomposer. /dev/dri/renderD128 is needed by everybody. So indeed it would not be correct to label everything with either graphics_device or gpu_device.\n\nThe cuttlefish sepolicy is new and could be incorrect too.",
      "parentUuid": "2a5fdf18_cfabbbe7",
      "revId": "6d725cb1ae2b329e16cc99941a39016bc145c79d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96243e99_357b0c0b",
        "filename": "sepolicy/file_contexts",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1031448
      },
      "writtenOn": "2019-09-19T20:57:03Z",
      "side": 1,
      "message": "I think I begin to understand what you meant here.\n\nI found out that gpu_device label has more relaxed permissions and probably meant only for /dev/dri/renderD128 device. And I don\u0027t even need to touch that device node for db845c because public sepolicies are already taking care of that.\n\nAs you pointed out, I labeled /dev/dir directory to graphics_device. Which has relatively restricted access, similar to /dev/dri/card0 and worked around that in my new patchset.\n\nuntrusted_app_xx like other system apps/services need read-only access to gpu sysfs nodes and graphics device. So I updated gpu_access macro accordingly, which only set rules (read-only) on graphics_device now.\n\nI\u0027ll submit the corresponding change ie.\n        \"allow { appdomain -isolated_app } graphics_device:dir r_dir_perms;\"\nto system/sepolicy/public/app.te too. If all this make sense to you guys.",
      "parentUuid": "b8ea7082_a38bd7d5",
      "revId": "6d725cb1ae2b329e16cc99941a39016bc145c79d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa95f379_cba0f15b",
        "filename": "sepolicy/file_contexts",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1293738
      },
      "writtenOn": "2019-09-19T21:02:04Z",
      "side": 1,
      "message": "Yes, I think so. And if this isn\u0027t correct, hopefully the security team can give us some guidance.",
      "parentUuid": "96243e99_357b0c0b",
      "revId": "6d725cb1ae2b329e16cc99941a39016bc145c79d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}