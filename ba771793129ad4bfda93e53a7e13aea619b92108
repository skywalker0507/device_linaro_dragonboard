{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e05abc31_ca652f0d",
        "filename": "sepolicy/set-udc-sh.te",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1010110
      },
      "writtenOn": "2021-07-22T22:21:07Z",
      "side": 1,
      "message": "Not sure what to do here in order to allow the set_udc.sh script to call setprop on sys.usb.controller",
      "revId": "ba771793129ad4bfda93e53a7e13aea619b92108",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfbb1d7f_b0feb7ed",
        "filename": "sepolicy/set-udc-sh.te",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1081223
      },
      "writtenOn": "2021-07-23T08:45:50Z",
      "side": 1,
      "message": "Since vendor_init is allowed you can use another property+trigger to do that\n\nproperty.te\ntype vendor_usb_prop, property_type;\n\nproperty_context\nvendor.usb.                u:object_r:vendor_usb_prop:s0\n\nset-udh-sg.te\nset_prop(set-udc-sh, vendor_usb_prop)\n\ninit.common.usb.rc\non property:vendor.usb.controller\u003d*\n    setprop sys.usb.controller ${vendor.usb.controller}\n    \nprop names/context are used in the latest QCOM BSP, so I just went with them.\n\nNOTE: newer bootloaders started to put the controller in cmdline so if available you can use\non property:ro.boot.usbcontroller\u003d*\n    setprop sys.usb.controller ${ro.boot.usbcontroller}",
      "parentUuid": "e05abc31_ca652f0d",
      "revId": "ba771793129ad4bfda93e53a7e13aea619b92108",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}